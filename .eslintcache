[{"/Users/dtm03/Dev/DesignTokens/dt-react/src/index.js":"1","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/routes.js":"2","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/tvshows.js":"3","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Menu.js":"4","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/MenuButton.tsx":"5","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Card.js":"6","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Title.js":"7","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileSwitcher.js":"8","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/home.js":"9","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/movies.js":"10","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/RailSwitcher.js":"11"},{"size":1198,"mtime":1610722107338,"results":"12","hashOfConfig":"13"},{"size":3239,"mtime":1611051369788,"results":"14","hashOfConfig":"13"},{"size":557,"mtime":1611050864604,"results":"15","hashOfConfig":"13"},{"size":273,"mtime":1610722092101,"results":"16","hashOfConfig":"13"},{"size":1664,"mtime":1611050520411,"results":"17","hashOfConfig":"13"},{"size":148,"mtime":1611011073231,"results":"18","hashOfConfig":"13"},{"size":167,"mtime":1611013547480,"results":"19","hashOfConfig":"13"},{"size":9262,"mtime":1611050641707,"results":"20","hashOfConfig":"13"},{"size":540,"mtime":1611050851476,"results":"21","hashOfConfig":"13"},{"size":547,"mtime":1611050858385,"results":"22","hashOfConfig":"13"},{"size":340,"mtime":1611050501693,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1srcvxm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dtm03/Dev/DesignTokens/dt-react/src/index.js",["48"],"import React from \"react\";\nimport { render } from \"react-dom\";\n// import react router\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport Menu from \"./components/Menu\";\nimport AppRoutes from \"./pages/routes\";\nimport { SunbeamProvider, FocusManager } from \"react-sunbeam\"\nconst focusManager = new FocusManager({\n  initialFocusPath: [\"menuContainer\", \"menuItem1\"],\n})\n\n// Use arrow key presses to control focus.\ndocument.addEventListener(\"keydown\", (event) => {\n  switch (event.key) {\n      case \"ArrowRight\":\n          focusManager.moveRight()\n          return\n      case \"ArrowLeft\":\n          focusManager.moveLeft()\n          return\n      case \"ArrowUp\":\n          focusManager.moveUp()\n          return\n      case \"ArrowDown\":\n          focusManager.moveDown()\n          return\n      case \"Backspace\":\n          focusManager.setFocus([\"carousel\", \"item-1\"])\n          return\n  }\n})\nconst App = () =>\n  <Router>\n    <div className=\"container\">\n        <Menu />\n        <Route path=\"/\" component={AppRoutes} />\n    </div>\n  </Router>;\n\nrender( <SunbeamProvider focusManager={focusManager}>\n  <App />\n</SunbeamProvider>, document.getElementById(\"app\"));\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/routes.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/tvshows.js",["49"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Menu.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/MenuButton.tsx",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Card.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Title.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileSwitcher.js",["50","51","52","53","54"],"import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\n// @ts-ignore\n// import { useSwitch } from \"@framer/tishogeorgiev.switch/code\"\n// @ts-ignore\nimport { useFocusable } from \"react-sunbeam\";\nimport {\n    useAnimation,\n    Frame,\n    Stack,\n} from \"framer\"\n// import { url } from \"framer/resource\"\n// import { createStore } from \"../setter\"\n\n// export const useSwitcherStore = createStore({\n//     tile: \"\",\n//     tileFocused: false,\n//     tilePosX: 0,\n//     tilePosY: 0,\n//     tileWidth: 0,\n//     tileHeight: 0,\n// })\n\nexport default function TileSwitcher(props) {\n    const {\n        logo,\n        text1,\n        text2,\n        radius,\n        progress,\n        gradient,\n        showLogo,\n        showTitle,\n        showSubtitle,\n        showProgress,\n        switchName,\n        children,\n        scale,\n        onKeyPress,\n        onTap,\n        focusKey,\n        ...rest\n    } = props\n    const ref = React.useRef(null)\n    const controls = useAnimation()\n    const controls2 = useAnimation()\n    const controls3 = useAnimation()\n    // const switchControls = useSwitch()\n    // const [storeSwitcher, setSwitcherStore] = useSwitcherStore()\n    const [stateProgress, setProgress] = useState(showProgress)\n\n    const transition = {\n        yoyo: 1,\n        duration: 0.3,\n        type: \"spring\",\n        damping: 40,\n        stiffness: 300,\n    }\n    const transition2 = {\n        duration: 0.35,\n        type: \"spring\",\n        damping: 60,\n        stiffness: 400,\n    }\n    useEffect(function () {\n        if (props.progress && props.progress !== 0) {\n            console.log(\"Progress:\" + props.progress)\n            setProgress(true)\n            console.log(\"Progress:\" + props.showProgress)\n        }\n    }, [])\n    // const { focused } = useFocusable(focusKey, ref, {\n        // onKeyPress: (event) => {\n        //     if (event.key === \"Enter\") {\n        //         let childname = children[0]?.props.name\n        //         childname &&\n        //             // switchControls.setSwitchState(switchName, childname)\n        //         console.log(\"KeyPressed: \" + childname)\n        //         controls.start({\n        //             scale: 0.9,\n        //             transition: transition,\n        //         })\n\n        //         event.stopPropagation()\n        //     }\n        // },\n        // onFocus: () => {\n        //     let tileParameters = ref.current.getBoundingClientRect()\n\n        //     controls.start({\n        //         scale: 1.08,\n        //         boxShadow: \"16px 16px 20px 0px rgba(0, 0, 0, 0.12)\",\n        //         opacity: 1,\n        //         transition: transition2,\n        //     })\n        //     controls2.start({\n        //         opacity: 1,\n        //     })\n        //     controls3.start({\n        //         opacity: 1,\n        //         transition: transition2,\n        //     })\n            // setSwitcherStore({\n            //     tile: focusKey,\n            //     tileFocused: true,\n            //     tilePosX: tileParameters.x,\n            //     tilePosY: tileParameters.y,\n            //     tileWidth: tileParameters.width,\n            //     tileHeight: tileParameters.height,\n            // })\n            // console.log(`${storeSwitcher.tile} is Focused`)\n        // },\n    //     onBlur: () => {\n    //         controls.start({\n    //             scale: 1,\n    //             boxShadow: \"4px 4px 8px 0px rgba(0, 0, 0, 0.12)\",\n    //             transition: transition2,\n    //             // opacity: 0.85,\n    //         })\n    //         controls2.start({\n    //             opacity: 0.5,\n    //             transition: transition2,\n    //         })\n    //         controls3.start({\n    //             opacity: 0.5,\n    //             transition: transition2,\n    //         })\n    //         // setSwitcherStore({ tileFocused: false })\n    //         // console.log(`${storeSwitcher.tile} is Blured`)\n    //     },\n    // })\n\n    return (\n        <Frame\n            ref={ref}\n            width={props.width}\n            height={props.height}\n            backgroundColor={\"#000\"}\n            borderRadius={props.radius}\n            overflow=\"hidden\"\n            animate={controls}\n            onKeyPress={onKeyPress}\n            onTap={onTap}\n            style={{\n                opacity: 1,\n                boxShadow: \"4px 4px 8px 0px rgba(0, 0, 0, 0.12)\",\n            }}\n        >\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                animate={controls3}\n                image={props.image}\n                style={{\n                    opacity: 0.5,\n                }}\n            />\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                image={gradient}\n                style={{\n                    opacity: 1,\n                }}\n            />\n            <Frame\n                width={props.width}\n                height={props.height}\n                borderRadius={radius}\n                overflow=\"hidden\"\n                animate={controls2}\n                backgroundColor={\"transparent\"}\n                style={{\n                    opacity: 0.5,\n                    border: 1,\n                    borderImageWidth: 1,\n                    borderStyle: \"solid\",\n                    borderImageSlice: 1,\n                    borderImageSource:\n                        \"radial-gradient(100% 100% at 100% 0%, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.15) 100%)\",\n                }}\n            />\n\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                borderRadius={props.radius}\n                animate={controls2}\n                image={gradient}\n                style={{\n                    opacity: 0.5,\n                    border: 1,\n                    borderImageWidth: 1,\n                    borderStyle: \"solid\",\n                    borderImageSlice: 1,\n                    borderImageSource:\n                        \"radial-gradient(400% 100% at 100% 0%, rgba(255, 255, 255, 0.26) 0%, rgba(255, 255, 255, 0.15) 100%)\",\n                }}\n            />\n\n            <Stack\n                distribution=\"end\"\n                alignment=\"start\"\n                animate={controls2}\n                width=\"100%\"\n                height=\"100%\"\n                style={{\n                    opacity: 0.5,\n                    paddingLeft: 24,\n                    paddingRight: 24,\n                    paddingBottom: 12,\n                    justifyItems: \"end\",\n                    color: \"#fff\",\n                    fontFamily: \"Sky Text Medium\",\n                    fontSize: props.fontsize,\n                }}\n            >\n                <Frame\n                    image={logo}\n                    width={365}\n                    height={75}\n                    visible={showLogo}\n                    left={0}\n                    style={{ backgroundColor: \"transparent\" }}\n                />\n\n                <Frame\n                    width=\"100%\"\n                    height=\"auto\"\n                    visible={showTitle}\n                    style={{\n                        alignItems: \"start\",\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        color: \"#fff\",\n                        fontFamily: \"Sky Text Medium\",\n                        fontSize: 36,\n                        textAlign: \"left\",\n                    }}\n                >\n                    {text1}\n                </Frame>\n                <Frame\n                    width=\"100%\"\n                    height=\"auto\"\n                    visible={showSubtitle}\n                    style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        color: \"#fff\",\n                        fontFamily: \"Sky Text \",\n                        fontSize: 28,\n                        textAlign: \"left\",\n                    }}\n                >\n                    {text2}\n                </Frame>\n                <Frame\n                    width={\"100%\"}\n                    height={6}\n                    visible={stateProgress}\n                    backgroundColor={\"transparent\"}\n                >\n                    <Frame\n                        width={\"100%\"}\n                        height={6}\n                        borderRadius={3}\n                        backgroundColor={\"rgba(255,255,255,0.1)\"}\n                    ></Frame>\n                    <Frame\n                        width={progress + \"%\"}\n                        height={6}\n                        borderRadius={3}\n                        backgroundColor={\"rgb(0, 135, 255)\"}\n                    ></Frame>\n                </Frame>\n            </Stack>\n        </Frame>\n    )\n}\n\nTileSwitcher.defaultProps = {\n    height: 315,\n    width: 560,\n    gradient: \"https://i.imgur.com/J9BHehk.png\",\n    showLogo: true,\n    showTitle: true,\n    showSubtitle: true,\n    showProgress: false,\n    text1: \"Programme Title\",\n    text2: \"Subtitle/Tag/Subline\",\n    radius: 10,\n    switchName: \"sharedSwitch\",\n}\n\n\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/home.js",["55"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/movies.js",["56"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/RailSwitcher.js",[],{"ruleId":"57","severity":1,"message":"58","line":15,"column":3,"nodeType":"59","messageId":"60","endLine":31,"endColumn":4},{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":20},{"ruleId":"61","severity":1,"message":"65","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":22},{"ruleId":"61","severity":1,"message":"66","line":43,"column":12,"nodeType":"63","messageId":"64","endLine":43,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":53,"column":11,"nodeType":"63","messageId":"64","endLine":53,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":60,"column":11,"nodeType":"63","messageId":"64","endLine":60,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":72,"column":8,"nodeType":"71","endLine":72,"endColumn":10,"suggestions":"72"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":20},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'RailSwitcher' is defined but never used.","Identifier","unusedVar","'useFocusable' is defined but never used.","'rest' is assigned a value but never used.","'transition' is assigned a value but never used.","'transition2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.progress' and 'props.showProgress'. Either include them or remove the dependency array.","ArrayExpression",["73"],{"desc":"74","fix":"75"},"Update the dependencies array to be: [props.progress, props.showProgress]",{"range":"76","text":"77"},[1745,1747],"[props.progress, props.showProgress]"]