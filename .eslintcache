[{"/Users/dtm03/Dev/DesignTokens/dt-react/src/index.js":"1","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/tvshows.js":"2","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Menu.js":"3","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/MenuButton.tsx":"4","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Card.js":"5","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/home.js":"6","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/movies.js":"7","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/RailSwitcher.js":"8","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/PageDescription.js":"9","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/PageTitle.js":"10","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileDefault.js":"11","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileSwitcher.tsx":"12","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Focusable.tsx":"13"},{"size":1815,"mtime":1613565308621,"results":"14","hashOfConfig":"15"},{"size":1170,"mtime":1611110232290,"results":"16","hashOfConfig":"15"},{"size":298,"mtime":1611135198863,"results":"17","hashOfConfig":"15"},{"size":1973,"mtime":1613568739942,"results":"18","hashOfConfig":"15"},{"size":148,"mtime":1611011073231,"results":"19","hashOfConfig":"15"},{"size":1216,"mtime":1611110225236,"results":"20","hashOfConfig":"15"},{"size":1089,"mtime":1611111867124,"results":"21","hashOfConfig":"15"},{"size":840,"mtime":1611111853922,"results":"22","hashOfConfig":"15"},{"size":730,"mtime":1611110322483,"results":"23","hashOfConfig":"15"},{"size":734,"mtime":1611112060665,"results":"24","hashOfConfig":"15"},{"size":9262,"mtime":1611084862588,"results":"25","hashOfConfig":"15"},{"size":2325,"mtime":1611110842837,"results":"26","hashOfConfig":"15"},{"size":2733,"mtime":1611090019442,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1srcvxm",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dtm03/Dev/DesignTokens/dt-react/src/index.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/tvshows.js",["59"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Menu.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/MenuButton.tsx",["60"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Card.js",[],"/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/home.js",["61","62"],"import { motion } from \"framer-motion\";\nimport PageDescription from \"../components/PageDescription\"\nimport PageTitle from \"../components/PageTitle\"\n\nconst transitionIn = { duration: 0.5, ease: [1, 0.16, 0, 0.33]};\nconst transitionOut = { duration:0.5, ease: [0.33, 0, 0.16, 1]};\n\nconst transition = { duration: 1, ease: [0.33, 0, 0.16, 1], staggerChildren: 0.3 };\nconst PageTransition = {\n  initial: { scale: 0.8, opacity: 0 },\n  enter: { scale: 1, opacity: 1, transition, delay:-0.25 },\n  exit: {\n    scale: 1.1,\n    opacity: 0,\n    transition: { duration: 1.5, ...transition }\n  }\n};\nconst Home = (props) =>\n<div style={{display:\"block\"}}>\n    <motion.div\n        initial=\"initial\"\n        animate=\"enter\"\n        exit=\"exit\"\n        enter=\"enter\"\n        variants={PageTransition}>\n      <PageTitle text={props.title}/>\n      <PageDescription  text={props.text}/>\n    </motion.div>\n  </div>;\n\nexport default Home;\n\nHome.defaultProps = {\n  title:\"Home\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\"\n}\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/pages/movies.js",["63","64"],"import { motion } from \"framer-motion\";\nimport PageDescription from \"../components/PageDescription\"\nimport PageTitle from \"../components/PageTitle\"\nimport RailSwitcher from \"../components/RailSwitcher\";\nconst transitionIn = { duration: 0.5, ease: [1, 0.16, 0, 0.33]};\nconst transitionOut = { duration:0.5, ease: [0.33, 0, 0.16, 1]};\n\nconst transition = { duration: 1, ease: [0.33, 0, 0.16, 1], staggerChildren: 0.3 };\nconst PageTransition = {\n  initial: { scale: 0.8, opacity: 0 },\n  enter: { scale: 1, opacity: 1, transition, delay:-0.25 },\n  exit: {\n    scale: 1.1,\n    opacity: 0,\n    transition: { duration: 1.5, ...transition }\n  }\n};\nconst Movies = (props) => \n  <div>\n     <motion.div\n        initial=\"initial\"\n        animate=\"enter\"\n        exit=\"exit\"\n        enter=\"enter\"\n        variants={PageTransition}\n      >\n      <PageTitle text={props.title}/>\n      <PageDescription text={props.text}/>\n      <RailSwitcher/>\n  </motion.div>\n  </div>;\nexport default Movies;\n\nMovies.defaultProps = {\n  title:\"Movies\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n}\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/RailSwitcher.js",["65","66"],"import { motion } from \"framer-motion\";\nimport TileSwitcher from \"./TileSwitcher\"\nconst transitionIn = { duration: 1, ease: [1, 0.16, 0, 0.33]};\nconst transitionOut = { duration:1, ease: [0.33, 0, 0.16, 1]};\nconst transition = { duration: 0.5, ease: [0.33, 0, 0.16, 1], staggerChildren: 0.3  };\n\nconst PageTransition = {\n  initial: { scale: 0.8, opacity: 0 },\n  enter: { scale: 1, opacity: 1, transition },\n  exit: {\n    scale: 1.1,\n    opacity: 0,\n    transition: transition \n  }\n};\nconst RailSwitcher = () => \n  <>\n    <motion.div\n      exit=\"exit\"\n      enter=\"enter\"\n      variants={PageTransition}\n      style={{display:\"inline-flex\", transformOrigin:\" 50% 50%\"}}\n    >\n      <TileSwitcher/>\n      <TileSwitcher/>\n      <TileSwitcher/>\n      <TileSwitcher/>\n      <TileSwitcher/>\n    </motion.div>\n  </>;\n\nexport default RailSwitcher;\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/PageDescription.js",["67","68"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/PageTitle.js",["69","70"],"/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileDefault.js",["71","72","73","74","75"],"import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\n// @ts-ignore\n// import { useSwitch } from \"@framer/tishogeorgiev.switch/code\"\n// @ts-ignore\nimport { useFocusable } from \"react-sunbeam\";\nimport {\n    useAnimation,\n    Frame,\n    Stack,\n} from \"framer\"\n// import { url } from \"framer/resource\"\n// import { createStore } from \"../setter\"\n\n// export const useSwitcherStore = createStore({\n//     tile: \"\",\n//     tileFocused: false,\n//     tilePosX: 0,\n//     tilePosY: 0,\n//     tileWidth: 0,\n//     tileHeight: 0,\n// })\n\nexport default function TileSwitcher(props) {\n    const {\n        logo,\n        text1,\n        text2,\n        radius,\n        progress,\n        gradient,\n        showLogo,\n        showTitle,\n        showSubtitle,\n        showProgress,\n        switchName,\n        children,\n        scale,\n        onKeyPress,\n        onTap,\n        focusKey,\n        ...rest\n    } = props\n    const ref = React.useRef(null)\n    const controls = useAnimation()\n    const controls2 = useAnimation()\n    const controls3 = useAnimation()\n    // const switchControls = useSwitch()\n    // const [storeSwitcher, setSwitcherStore] = useSwitcherStore()\n    const [stateProgress, setProgress] = useState(showProgress)\n\n    const transition = {\n        yoyo: 1,\n        duration: 0.3,\n        type: \"spring\",\n        damping: 40,\n        stiffness: 300,\n    }\n    const transition2 = {\n        duration: 0.35,\n        type: \"spring\",\n        damping: 60,\n        stiffness: 400,\n    }\n    useEffect(function () {\n        if (props.progress && props.progress !== 0) {\n            console.log(\"Progress:\" + props.progress)\n            setProgress(true)\n            console.log(\"Progress:\" + props.showProgress)\n        }\n    }, [])\n    // const { focused } = useFocusable(focusKey, ref, {\n        // onKeyPress: (event) => {\n        //     if (event.key === \"Enter\") {\n        //         let childname = children[0]?.props.name\n        //         childname &&\n        //             // switchControls.setSwitchState(switchName, childname)\n        //         console.log(\"KeyPressed: \" + childname)\n        //         controls.start({\n        //             scale: 0.9,\n        //             transition: transition,\n        //         })\n\n        //         event.stopPropagation()\n        //     }\n        // },\n        // onFocus: () => {\n        //     let tileParameters = ref.current.getBoundingClientRect()\n\n        //     controls.start({\n        //         scale: 1.08,\n        //         boxShadow: \"16px 16px 20px 0px rgba(0, 0, 0, 0.12)\",\n        //         opacity: 1,\n        //         transition: transition2,\n        //     })\n        //     controls2.start({\n        //         opacity: 1,\n        //     })\n        //     controls3.start({\n        //         opacity: 1,\n        //         transition: transition2,\n        //     })\n            // setSwitcherStore({\n            //     tile: focusKey,\n            //     tileFocused: true,\n            //     tilePosX: tileParameters.x,\n            //     tilePosY: tileParameters.y,\n            //     tileWidth: tileParameters.width,\n            //     tileHeight: tileParameters.height,\n            // })\n            // console.log(`${storeSwitcher.tile} is Focused`)\n        // },\n    //     onBlur: () => {\n    //         controls.start({\n    //             scale: 1,\n    //             boxShadow: \"4px 4px 8px 0px rgba(0, 0, 0, 0.12)\",\n    //             transition: transition2,\n    //             // opacity: 0.85,\n    //         })\n    //         controls2.start({\n    //             opacity: 0.5,\n    //             transition: transition2,\n    //         })\n    //         controls3.start({\n    //             opacity: 0.5,\n    //             transition: transition2,\n    //         })\n    //         // setSwitcherStore({ tileFocused: false })\n    //         // console.log(`${storeSwitcher.tile} is Blured`)\n    //     },\n    // })\n\n    return (\n        <Frame\n            ref={ref}\n            width={props.width}\n            height={props.height}\n            backgroundColor={\"#000\"}\n            borderRadius={props.radius}\n            overflow=\"hidden\"\n            animate={controls}\n            onKeyPress={onKeyPress}\n            onTap={onTap}\n            style={{\n                opacity: 1,\n                boxShadow: \"4px 4px 8px 0px rgba(0, 0, 0, 0.12)\",\n            }}\n        >\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                animate={controls3}\n                image={props.image}\n                style={{\n                    opacity: 0.5,\n                }}\n            />\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                image={gradient}\n                style={{\n                    opacity: 1,\n                }}\n            />\n            <Frame\n                width={props.width}\n                height={props.height}\n                borderRadius={radius}\n                overflow=\"hidden\"\n                animate={controls2}\n                backgroundColor={\"transparent\"}\n                style={{\n                    opacity: 0.5,\n                    border: 1,\n                    borderImageWidth: 1,\n                    borderStyle: \"solid\",\n                    borderImageSlice: 1,\n                    borderImageSource:\n                        \"radial-gradient(100% 100% at 100% 0%, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.15) 100%)\",\n                }}\n            />\n\n            <Frame\n                backgroundColor={\"transparent\"}\n                width={\"100%\"}\n                height={\"100%\"}\n                borderRadius={props.radius}\n                animate={controls2}\n                image={gradient}\n                style={{\n                    opacity: 0.5,\n                    border: 1,\n                    borderImageWidth: 1,\n                    borderStyle: \"solid\",\n                    borderImageSlice: 1,\n                    borderImageSource:\n                        \"radial-gradient(400% 100% at 100% 0%, rgba(255, 255, 255, 0.26) 0%, rgba(255, 255, 255, 0.15) 100%)\",\n                }}\n            />\n\n            <Stack\n                distribution=\"end\"\n                alignment=\"start\"\n                animate={controls2}\n                width=\"100%\"\n                height=\"100%\"\n                style={{\n                    opacity: 0.5,\n                    paddingLeft: 24,\n                    paddingRight: 24,\n                    paddingBottom: 12,\n                    justifyItems: \"end\",\n                    color: \"#fff\",\n                    fontFamily: \"Sky Text Medium\",\n                    fontSize: props.fontsize,\n                }}\n            >\n                <Frame\n                    image={logo}\n                    width={365}\n                    height={75}\n                    visible={showLogo}\n                    left={0}\n                    style={{ backgroundColor: \"transparent\" }}\n                />\n\n                <Frame\n                    width=\"100%\"\n                    height=\"auto\"\n                    visible={showTitle}\n                    style={{\n                        alignItems: \"start\",\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        color: \"#fff\",\n                        fontFamily: \"Sky Text Medium\",\n                        fontSize: 36,\n                        textAlign: \"left\",\n                    }}\n                >\n                    {text1}\n                </Frame>\n                <Frame\n                    width=\"100%\"\n                    height=\"auto\"\n                    visible={showSubtitle}\n                    style={{\n                        justifyContent: \"start\",\n                        background: \"transparent\",\n                        color: \"#fff\",\n                        fontFamily: \"Sky Text \",\n                        fontSize: 28,\n                        textAlign: \"left\",\n                    }}\n                >\n                    {text2}\n                </Frame>\n                <Frame\n                    width={\"100%\"}\n                    height={6}\n                    visible={stateProgress}\n                    backgroundColor={\"transparent\"}\n                >\n                    <Frame\n                        width={\"100%\"}\n                        height={6}\n                        borderRadius={3}\n                        backgroundColor={\"rgba(255,255,255,0.1)\"}\n                    ></Frame>\n                    <Frame\n                        width={progress + \"%\"}\n                        height={6}\n                        borderRadius={3}\n                        backgroundColor={\"rgb(0, 135, 255)\"}\n                    ></Frame>\n                </Frame>\n            </Stack>\n        </Frame>\n    )\n}\n\nTileSwitcher.defaultProps = {\n    height: 315,\n    width: 560,\n    gradient: \"https://i.imgur.com/J9BHehk.png\",\n    showLogo: true,\n    showTitle: true,\n    showSubtitle: true,\n    showProgress: false,\n    text1: \"Programme Title\",\n    text2: \"Subtitle/Tag/Subline\",\n    radius: 10,\n    switchName: \"sharedSwitch\",\n}\n\n\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/TileSwitcher.tsx",["76","77"],"import React, {ReactNode, useRef} from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from 'styled-components'\nimport {useHistory } from \"react-router-dom\";\nimport { useFocusable } from \"react-sunbeam\";\n\nconst transitionIn = { duration: 1, ease: [1, 0.16, 0, 0.33]};\nconst transitionOut = { duration:1, ease: [0.33, 0, 0.16, 1]};\nconst transition = { duration: 0.5, ease: [0.33, 0, 0.16, 1] };\nconst PageTransition = {\n    initial: { scale: 0.8, opacity: 0 },\n    enter: { scale: 1, opacity: 1, transition },\n    exit: {\n      scale: 1.1,\n      opacity: 0,\n      transition: transition \n    }\n  };\ninterface Props {\n  children: ReactNode;\n  to:string;\n  name:string;\n  ref:string;\n  onKeyPress:KeyboardEvent;\n}\n\nfunction TileSwicther({children, ...props }: Props) {\n  const history = useHistory();\n  const ref = useRef<HTMLDivElement>(null)\n    const { focused } = useFocusable({\n        elementRef: ref,\n        onKeyPress(event) {\n            if (event.key === \"Enter\") {\n              history.push(props.to);\n                event.stopPropagation()\n              \n            }\n        },\n        onBlur(event){\n\n        },\n        onFocus(event){\n\n        }\n    })\n     const handleClick=()=> {\n      history.push(props.to);\n  \n    }\n    return (\n        <motion.div variants={PageTransition} style={{transformOrigin:\" 50% 50%\"}}>\n            <Tile ref={ref} onClick={handleClick} style={{ border: focused ? \"2px solid var(--colors-white-24)\" : \"2px solid transparent\" }}>\n            {props.name}\n            </Tile>\n        </motion.div>\n  );\n};\n\nexport default TileSwicther;\n\nconst Tile = styled.div`\n  font-family:var(---typography-h-5-font-size);\n  font-size:var(----typography-h-5-font-size);\n  background: var(--colors-white-6);\n  box-shadow: calc(var(--elevation-lrg-0-offset-x)*1px) calc(var(--elevation-lrg-0-offset-y)*1px) 30px calc(var(--elevation-lrg-0-spread)*1px) var(--elevation-lrg-0-color),\n  calc(var(--elevation-lrg-1-offset-x)*1px) calc(var(--elevation-lrg-1-offset-y)*1px) calc(var(--elevation-lrg-1-radius)*1px) calc(var(--elevation-lrg-1-spread)*1px)  var(--elevation-lrg-1-color) ;\n  color:var(--colors-white-100);\n  margin: 0 24px 0 0;\n  border-radius:calc(var(--radii-sml-radius)*1px);\n  padding: 0.25em 1em;\n  outline:none;\n  height: 234px;\n  width: 414px;\n  display:block;\n`\n\n","/Users/dtm03/Dev/DesignTokens/dt-react/src/components/Focusable.tsx",["78"],{"ruleId":"79","severity":1,"message":"80","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":50,"column":7,"nodeType":"81","messageId":"82","endLine":50,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":2,"column":7,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":20},{"ruleId":"79","severity":1,"message":"86","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":22},{"ruleId":"79","severity":1,"message":"87","line":43,"column":12,"nodeType":"81","messageId":"82","endLine":43,"endColumn":16},{"ruleId":"79","severity":1,"message":"88","line":53,"column":11,"nodeType":"81","messageId":"82","endLine":53,"endColumn":21},{"ruleId":"79","severity":1,"message":"89","line":60,"column":11,"nodeType":"81","messageId":"82","endLine":60,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":72,"column":8,"nodeType":"92","endLine":72,"endColumn":10,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"80","line":7,"column":7,"nodeType":"81","messageId":"82","endLine":7,"endColumn":19},{"ruleId":"83","severity":1,"message":"85","line":8,"column":7,"nodeType":"81","messageId":"82","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":37,"column":8,"nodeType":"92","endLine":37,"endColumn":14,"suggestions":"95"},"no-unused-vars","'transitionIn' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'Button' is assigned a value but never used.","'transitionOut' is assigned a value but never used.","'useFocusable' is defined but never used.","'rest' is assigned a value but never used.","'transition' is assigned a value but never used.","'transition2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.progress' and 'props.showProgress'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook useCallback has a missing dependency: 'setFocus'. Either include it or remove the dependency array.",["97"],{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [props.progress, props.showProgress]",{"range":"102","text":"103"},"Update the dependencies array to be: [path, setFocus]",{"range":"104","text":"105"},[1745,1747],"[props.progress, props.showProgress]",[1262,1268],"[path, setFocus]"]